import os
import sqlite3
import telebot

from dotenv import load_dotenv
from telebot import types
from typing import Tuple


HELP_TEXT = (
    '–≠—Ç–æ—Ç –±–æ—Ç –∑–Ω–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:'
    '\n/repo - –≤—ã–≤–æ–¥–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º;'
    '\n/help - –≤—ã–∑—ã–≤–∞–µ—Ç —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –≤–æ—Ç —Ç–∞–∫ —Å—é—Ä–ø—Ä–∏–∑!'
    '\n/start - –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –±–æ—Ç–æ–º –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é;'
    '\n/menu - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞;'
    '\n/hobby - –±–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ö–æ–±–±–∏;'
    '\n/photos - –º–µ–Ω—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π;'
    '\n/selfie - –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–µ–ª—Ñ–∏;'
    '\n/school - –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —à–∫–æ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ;'
    '\n/voices - –º–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π;'
    '\n/gpt - –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ GPT;'
    '\n/love - –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ –ª—é–±–æ–≤—å;'
    '\n/sql - –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ SQL.'
)

load_dotenv()

BOT_TOKEN = os.getenv('SET_SAILS_BOT_TOKEN')
bot = telebot.TeleBot(token=BOT_TOKEN)


# –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
def create_database():
    """ –°–æ–∑–¥–∞–Ω–∏–µ –ë–î. """
    conn = sqlite3.connect('usernames.db')
    cur = conn.cursor()
    cur.execute(
        """CREATE TABLE IF NOT EXISTS users(
        user_id INT PRIMARY KEY,
        name TEXT);"""
    )
    conn.commit()


def add_to_database(user_data: Tuple[int, str]) -> None:
    """ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î. """

    conn = sqlite3.connect('usernames.db')
    cur = conn.cursor()

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø–∏—Å–∏
    cur.execute(
        'SELECT count(*) FROM users WHERE user_id = ?', (user_data[0],)
    )

    # –µ—Å–ª–∏ –Ω–µ—Ç —Ç–∞–∫–æ–π –∑–∞–ø–∏—Å–∏
    if cur.fetchone()[0] == 0:
        cur.execute('INSERT INTO users VALUES(?, ?);', user_data)
        conn.commit()

    # –µ—Å–ª–∏ —Ç–∞–∫–∞—è –∑–∞–ø–∏—Å—å –µ—Å—Ç—å
    else:
        cur.execute(
            'UPDATE users SET name = ? WHERE user_id = ?;',
            (user_data[1], user_data[0])
        )
        conn.commit()


def read_from_database(user_id: int):
    """ –ß—Ç–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î. """

    conn = sqlite3.connect('usernames.db')
    cur = conn.cursor()
    cur.execute(
        'SELECT name FROM users WHERE user_id = ?;', (user_id,)
    )

    # –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ —Å–ª—É—á–∏—Ç—Å—è —Å –ë–î
    name = cur.fetchone()
    if name is None:
        return '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',

    return name


# —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–¥ –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(content_types=['text'], commands=['repo'])
def repo(message):
    """ –í—ã–≤–æ–¥–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥. """

    bot.send_message(
        chat_id=message.chat.id,
        text=(
            'https://github.com/andrzej-skuridin/'
            'yandex-bot-for-teenagers-test-assigment.git'
        )
    )


@bot.message_handler(content_types=['text'], commands=['help'])
def helper(message):
    """ –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥. """

    bot.send_message(
        chat_id=message.chat.id,
        text=HELP_TEXT
    )


@bot.message_handler(content_types=['text'], commands=['start'])
def start(message):
    """ –ó–¥–æ—Ä–æ–≤–∞–µ—Ç—Å—è –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. """

    bot.send_message(
        chat_id=message.chat.id,
        text='–ü—Ä–∏–≤–µ—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! –ö–∞–∫ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?'
    )
    bot.register_next_step_handler(
        message=message,
        callback=acquaintance
    )


def acquaintance(message):
    """ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. """

    user_id = message.from_user.id
    name = message.text
    add_to_database(user_data=(user_id, name))

    if name in ('–ê–Ω–æ–Ω–∏–º', '–ê–Ω–æ–Ω–∏–º—É—Å', 'Anonymous'):
        bot.send_photo(
            chat_id=message.chat.id,
            caption='–ñ–µ–ª–∞–µ—à—å –æ—Å—Ç–∞—Ç—å—Å—è –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ? –û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ.',
            photo=open('media/anonymous.jpg', 'rb')
        )
    bot.send_message(
        chat_id=message.chat.id,
        text='–û—Ç–ª–∏—á–Ω–æ, –ø—Ä–∏–≤–µ—Ç –µ—â—ë —Ä–∞–∑, '
             f'{read_from_database(user_id=message.chat.id)[0]}!'
             '\n–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –≤–≤–µ–¥–∏ "/menu".'
             '\n–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –≤–≤–µ–¥–∏ "/help".'
    )


@bot.message_handler(content_types=['text'], commands=['menu'])
def main_menu(message):
    """ –§—É–Ω–∫—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é. """

    keyboard = types.InlineKeyboardMarkup()

    key_photos = types.InlineKeyboardButton(
        text='–ú–µ–Ω—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π',
        callback_data='photos_menu'
    )

    key_voices = types.InlineKeyboardButton(
        text='–ú–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π',
        callback_data='voices_menu'
    )

    key_hobby = types.InlineKeyboardButton(
        text='–ü–æ–∫–∞–∑–∞—Ç—å —Ö–æ–±–±–∏',
        callback_data='hobby'
    )
    keyboard.add(key_photos, key_voices)
    keyboard.add(key_hobby)

    bot.send_message(
        chat_id=message.chat.id,
        text='–ß–µ–º –∑–∞–π–º—ë–º—Å—è, '
             f'{read_from_database(user_id=message.chat.id)[0]}?',
        reply_markup=keyboard
    )


@bot.message_handler(content_types=['text'], commands=['hobby'])
def send_hobby(message):
    """ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ –±–æ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. """

    bot.send_video(
        chat_id=message.chat.id,
        video=open('media/music.mp4', 'rb'),
        caption='–ü–æ—Å—Ç–∞–≤—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–∞ 1.2 –∏ –±–µ—Ä–µ–≥–∏—Ç–µ —É—à–∏ üôâ',
    )


@bot.message_handler(content_types=['text'], commands=['photos'])
def photos_menu(message):
    """ –§—É–Ω–∫—Ü–∏—è –º–µ–Ω—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π. """

    keyboard = types.InlineKeyboardMarkup()

    key_selfie = types.InlineKeyboardButton(
        text='–ü–æ–∫–∞–∑–∞—Ç—å —Å–µ–ª—Ñ–∏',
        callback_data='selfie'
    )

    key_school = types.InlineKeyboardButton(
        text='–ü–æ–∫–∞–∑–∞—Ç—å —à–∫–æ–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ',
        callback_data='school'
    )

    key_main_menu = types.InlineKeyboardButton(
        text='–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
        callback_data='main_menu'
    )

    keyboard.add(key_selfie, key_school)
    keyboard.add(key_main_menu)

    bot.send_message(
        chat_id=message.chat.id,
        text='–ß—Ç–æ –º–Ω–µ —Å–¥–µ–ª–∞—Ç—å, '
             f'{read_from_database(user_id=message.chat.id)[0]}?',
        reply_markup=keyboard
    )


@bot.message_handler(content_types=['text'], commands=['voices'])
def voices_menu(message):
    """ –§—É–Ω–∫—Ü–∏—è –º–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π. """

    keyboard = types.InlineKeyboardMarkup()

    key_selfie = types.InlineKeyboardButton(
        text='–ü—Ä–æ –ª—é–±–æ–≤—å',
        callback_data='love'
    )

    key_gpt = types.InlineKeyboardButton(
        text='–ü—Ä–æ GPT',
        callback_data='gpt'
    )

    key_sql = types.InlineKeyboardButton(
        text='–ü—Ä–æ (No)SQL',
        callback_data='sql'
    )

    key_main_menu = types.InlineKeyboardButton(
        text='–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
        callback_data='main_menu'
    )

    keyboard.add(
        key_selfie,
        key_gpt,
        key_sql,
        key_main_menu
    )

    bot.send_message(
        chat_id=message.chat.id,
        text='–û —á—ë–º –º–Ω–µ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å, '
             f'{read_from_database(user_id=message.chat.id)[0]}?',
        reply_markup=keyboard
    )


@bot.message_handler(content_types=['text'], commands=['selfie'])
def send_selfie(message):
    """ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–µ–ª—Ñ–∏ –±–æ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. """

    bot.send_photo(
        chat_id=message.chat.id,
        photo=open('media/selfie.jpg', 'rb'),
        caption='–ù–∞ —Ñ–æ–Ω–µ –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ üòÑ'
    )


@bot.message_handler(content_types=['text'], commands=['school'])
def send_school_photo(message):
    """ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —à–∫–æ–ª—å–Ω–æ–≥–æ —Ñ–æ—Ç–æ –±–æ—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. """

    bot.send_photo(
        chat_id=message.chat.id,
        photo=open('media/school.jpg', 'rb'),
        caption='–≠—Ç–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ–æ—Ç–∫–∞ —Å –≤—ã–ø—É—Å–∫–Ω–æ–≥–æ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —è –µ—Å—Ç—å ü§£. '
                '–í—Ç–æ—Ä–æ–π —Ä—è–¥, –∫—Ä–∞–π–Ω–∏–π —Å–ø—Ä–∞–≤–∞.'
    )


@bot.message_handler(content_types=['text'], commands=['gpt'])
def send_voice_on_gpt(message):
    """ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ GPT. """

    bot.send_voice(
        chat_id=message.chat.id,
        voice=open('media/audio_gpt.wav', 'rb'),
        caption='Crash-course –ø–æ GPT –¥–ª—è –±–∞–±—É—à–µ–∫. –ò –¥–ª—è —Ç–µ–±—è, '
                f'{read_from_database(user_id=message.chat.id)[0]}.'
    )


@bot.message_handler(content_types=['text'], commands=['sql'])
def send_voice_on_sql(message):
    """ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ SQL. """

    bot.send_voice(
        chat_id=message.chat.id,
        voice=open('media/audio_sql.wav', 'rb'),
        caption='–û —Ä–∞–∑–ª–∏—á–∏—è—Ö –º–µ–∂–¥—É SQL –∏ NoSQL.'
    )


@bot.message_handler(content_types=['text'], commands=['love'])
def send_voice_on_love(message):
    """ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ –ª—é–±–æ–≤—å. """

    bot.send_voice(
        chat_id=message.chat.id,
        voice=open('media/audio_love.wav', 'rb'),
        caption='–ü–æ—Å–ª—É—à–∞–π, '
                f'{read_from_database(user_id=message.chat.id)[0]}'
                ', —Å–∫–∞–∑ –æ –ª—é–±–≤–∏.'
    )


# –∫–Ω–æ–ø–æ—á–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
command_functions = {
    'main_menu': main_menu,
    'hobby': send_hobby,
    'photos_menu': photos_menu,
    'voices_menu': voices_menu,
    'selfie': send_selfie,
    'school': send_school_photo,
    'love': send_voice_on_love,
    'gpt': send_voice_on_gpt,
    'sql': send_voice_on_sql,
}


@bot.callback_query_handler(func=lambda call: True)
def callback_catcher(call):
    """ –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ —Å –∫–Ω–æ–ø–æ–∫. """

    if call.data in command_functions:
        command_functions[call.data](call.message)
    else:
        pass


# –∑–∞–ø—É—Å–∫
create_database()
bot.polling(none_stop=True, interval=0)
